{
  "swagger": "2.0",
  "info": {
    "description": "",
    "version": "0.0.1",
    "title": "Todo-Listen-Verwaltung",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "127.0.0.1:5000",
  "basePath": "/",
  "tags": [
    {
      "name": "Listenverwaltung"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/list/{list_id}": {
      "get": {
        "tags": [
          "Listenverwaltung"
        ],
        "summary": "Get all items from list",
        "description": "",
        "operationId": "getList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "list id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List item returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TodoEntry"
              }
            }
          },
          "404": {
            "description": "Invalid list id"
          }
        }
      },
      "delete": {
        "tags": [
          "Listenverwaltung"
        ],
        "summary": "Delete a list",
        "description": "",
        "operationId": "deleteList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "list id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List was deleted"
          },
          "404": {
            "description": "Invalid list id"
          }
        }
      }
    },
    "/list/": {
      "post": {
        "tags": [
          "Listenverwaltung"
        ],
        "summary": "Add new list",
        "description": "",
        "operationId": "addList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "list object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TodoList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List added",
            "schema": {
              "$ref": "#/definitions/TodoList"
            }
          },
          "500": {
            "description": "List could not be added"
          }
        }
      }
    },
    "/list/{list_id}/entry": {
      "post": {
        "tags": [
          "Eintrag"
        ],
        "summary": "Add new entry",
        "description": "",
        "operationId": "addEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "list id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Entry added",
            "schema": {
              "$ref": "#/definitions/TodoEntry"
            }
          },
          "500": {
            "description": "Entry could not be added"
          }
        }
      }
    },
    "/list/{list_id}/entry/{entry_id}": {
      "post": {
        "tags": [
          "Eintrag"
        ],
        "summary": "update exist entry",
        "description": "",
        "operationId": "updateEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "list id",
            "required": true,
            "type": "string"
          },
          {
            "name": "entry_id",
            "in": "path",
            "description": "entry id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Inhalt",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TodoEntry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entry updated",
            "schema": {
              "$ref": "#/definitions/TodoEntry"
            }
          },
          "500": {
            "description": "Entry could not be updated"
          }
        }
      },
      "delete": {
        "tags": [
          "Eintrag"
        ],
        "summary": "Delete a entry",
        "description": "",
        "operationId": "deleteEntry",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "list id",
            "required": true,
            "type": "string"
          },
          {
            "name": "entry_id",
            "in": "path",
            "description": "entry id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "entry was deleted"
          },
          "404": {
            "description": "Invalid entry id"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get all user",
        "description": "",
        "operationId": "getUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "users",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List user returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TodoEntry"
              }
            }
          },
          "404": {
            "description": "Invalid user id"
          }
        }
      }
    },
    "/user/": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "add new user",
        "description": "",
        "operationId": "addUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entry updated",
            "schema": {
              "$ref": "#/definitions/TodoEntry"
            }
          },
          "500": {
            "description": "Entry could not be updated"
          }
        }
      }
    },
    "/user/{user_id}": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete a entry",
        "description": "",
        "operationId": "deleteUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "user was deleted"
          },
          "404": {
            "description": "Invalid user id"
          }
        }
      }
    }
  },
  "definitions": {
    "TodoList": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "TodoEntry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "user_id": {
          "type": "string",
          "format": "uuid"
        },
        "list_id": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        }
      }
    }
  }
}